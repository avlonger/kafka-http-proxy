#!/usr/bin/perl

use strict;
use warnings;

use LWP::UserAgent;
use JSON qw(decode_json);

my $config_file = "/etc/yandex/khp/kafka.json";

sub read_config {
	my $json_text = "";
	{
		local $/;
		open(my $fh, '<', $config_file);
		$json_text = <$fh>;
		close($fh);
	}
	return JSON->new->utf8->relaxed->decode($json_text);
}

my $config = read_config();
my $url    = sprintf 'http://%s:%s', $config->{khp}->{host}, $config->{khp}->{port};

sub ans {
	my ($code, $msg) = @_;
	print "PASSIVE-CHECK:replicas_writable;$code;$msg\n";
	exit(0);
}

foreach my $topic (@{$config->{kafka}->{topics}}) {
	my $name = $topic->{name};
	my $ua  = LWP::UserAgent->new;
	my $req = HTTP::Request->new("GET", "$url/v1/info/topics/$name");
	my $res = $ua->request($req);

	if (!$res->is_success) {
		my $json = eval { decode_json($res->content) };
		ans(2, $res->status_line)
			if $@;

		if ($json->{status} eq "error") {
			ans(2, $json->{data});
		}

		ans(2, $res->status_line);
	}

	my $json = decode_json($res->content);
	if ($json->{status} ne "success") {
		ans(2, $json->{data});
	}

	my $writable = 0;

	foreach my $p (@{$json->{data}}) {
		$writable += 1
			if $p->{writable};
	}

	ans(0, "OK")
		if $writable == $topic->{partitions};

	ans(2, "Topic $topic, writable topics $writable != " . $topic->{partitions});
}
